on: push
name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'

      - name: Setup dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test


  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'

      - name: Generate dist
        id: generate_dist
        run: |
          npm ci
          npm run build
          npm run dist

          package_name=$(npm pkg get name | xargs echo)
          echo "package_name=$package_name" >> $GITHUB_OUTPUT

      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: node
          package-name: ${{ steps.generate_dist.outputs.package_name }}

      - name: Add assets to Github Release
        if: ${{ steps.release-please.outputs.release_created }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |

          package_version=$(npm pkg get version | xargs echo)
          package_name=${{ steps.generate_dist.outputs.package_name }}
          alpine_pkg=$package_name-alpine-x86_64-v$package_version.zip
          linux_pkg=$package_name-linux-x86_64-v$package_version.zip
          macos_pkg=$package_name-macos-x86_64-v$package_version.zip
          win_pkg=$package_name-win-x86_64-v$package_version.zip

          cp build/dist/$package_name-alpine $package_name
          zip $alpine_pkg $package_name

          cp build/dist/$package_name-linux $package_name
          zip $linux_pkg $package_name

          cp build/dist/$package_name-macos $package_name
          zip $macos_pkg $package_name

          cp build/dist/$package_name-win.exe $package_name.exe
          zip $win_pkg $package_name.exe

          gh release upload ${{ steps.release-please.outputs.tag_name }} $alpine_pkg
          gh release upload ${{ steps.release-please.outputs.tag_name }} $linux_pkg
          gh release upload ${{ steps.release-please.outputs.tag_name }} $macos_pkg
          gh release upload ${{ steps.release-please.outputs.tag_name }} $win_pkg
